// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using ResumeProject.Data;
using System;

namespace ResumeProject.Migrations
{
    [DbContext(typeof(ResumeContext))]
    [Migration("20190301033718_updateDatabase")]
    partial class updateDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ResumeProject.Models.Applicant", b =>
                {
                    b.Property<int>("ApplicantID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("ApplicantID");

                    b.ToTable("Applicant");
                });

            modelBuilder.Entity("ResumeProject.Models.Duty", b =>
                {
                    b.Property<int>("DutyID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DutiesPerformed");

                    b.Property<int>("JobID");

                    b.HasKey("DutyID");

                    b.HasIndex("JobID");

                    b.ToTable("Duty");
                });

            modelBuilder.Entity("ResumeProject.Models.Education", b =>
                {
                    b.Property<int>("EducationID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ApplicantID");

                    b.Property<double>("GPA");

                    b.Property<DateTime>("GraduationDate");

                    b.Property<string>("Major");

                    b.Property<string>("Minor");

                    b.Property<string>("SchoolAddress");

                    b.Property<string>("SchoolName");

                    b.HasKey("EducationID");

                    b.HasIndex("ApplicantID");

                    b.ToTable("Education");
                });

            modelBuilder.Entity("ResumeProject.Models.Job", b =>
                {
                    b.Property<int>("JobID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ApplicantID");

                    b.Property<string>("CompanyLocation");

                    b.Property<string>("CompanyName");

                    b.Property<string>("Position");

                    b.Property<DateTime>("WorkEndDate");

                    b.Property<DateTime>("WorkStartDate");

                    b.HasKey("JobID");

                    b.HasIndex("ApplicantID");

                    b.ToTable("Job");
                });

            modelBuilder.Entity("ResumeProject.Models.Reference", b =>
                {
                    b.Property<int>("ReferenceID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ApplicantID");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("ReferenceID");

                    b.HasIndex("ApplicantID");

                    b.ToTable("Reference");
                });

            modelBuilder.Entity("ResumeProject.Models.Duty", b =>
                {
                    b.HasOne("ResumeProject.Models.Job")
                        .WithMany("Duties")
                        .HasForeignKey("JobID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ResumeProject.Models.Education", b =>
                {
                    b.HasOne("ResumeProject.Models.Applicant", "Applicant")
                        .WithMany("Educations")
                        .HasForeignKey("ApplicantID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ResumeProject.Models.Job", b =>
                {
                    b.HasOne("ResumeProject.Models.Applicant", "Applicant")
                        .WithMany("Jobs")
                        .HasForeignKey("ApplicantID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ResumeProject.Models.Reference", b =>
                {
                    b.HasOne("ResumeProject.Models.Applicant", "Applicant")
                        .WithMany("References")
                        .HasForeignKey("ApplicantID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
